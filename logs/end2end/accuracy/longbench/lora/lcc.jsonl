{"pred": "\t\t\tParticipant p = Participant m_Participants[i];\n\t\t\tif ( p.Eliminated )\n\t\t\t{\n\t\t\t\tp.CloseGump( types[0];\n\t\t\t\tdef = defs[0];", "answers": ["\t\t\t\tParticipant p = (Participant)m_Participants[i];"], "all_classes": null, "length": 5243}
{"pred": "\t\t\tif w < d:\n\t\t\treturn e_u, e_v, e_key, data\n\t\telse:\n\t\treturn None\n\t\"\"\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\t\tZ_.add_edge(e_u, e_v, **data.copy())"], "all_classes": null, "length": 1069}
{"pred": "        a = Sndfile(ofilename, 'r')\n        nframes = a.nframes\n        buffsize = 102\n        buffsize = min(nframes, buffsize)\n        # First, read some frames, go back, and compare buffers\n        buff", "answers": ["        rfd, fd, cfilename   = open_tmp_file('rwseektest.wav')"], "all_classes": null, "length": 844}
{"pred": "            if e.text == language:\n                return True\n        else:\n            return False\n    def activity_text(self):\n        return self.get_text_by_css(self._ACTIVITY_LIST)\n    def activity_link(self):\n        return self.", "answers": ["            if e.text == language:"], "all_classes": null, "length": 462}
{"pred": "\t\t\t\tStyle value = OLStyle value;\n\t\t\twriter.addAttribute(\"name\", value.getName());\n\t\t\twriter.add(\"default\", value.getDefault());\n\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t\tObject unmar", "answers": ["\t\t\t\t\tOLStyleValue styleValue = (OLStyleValue) value;"], "all_classes": null, "length": 570}
{"pred": "        return self.hint_string()\n\n\n\nSo the code is:\n\n\nimport sys.path.insert(0, \"../\")\nimport yobot_interfaces\nimport yobproto\nfrom client_support import YCCount, SimpleNotice\nfrom gui_", "answers": ["        longest = max(self.answers)"], "all_classes": null, "length": 1229}
{"pred": "                    mob.Prompt = new SR_NewRunePrompt(RuneAcc, mob.Location, mob.Map);\n                    Send(mob, SR_Utilities.FetchInfo(mob.Account));\n                    break;\n                case 3:\n                    mob", "answers": ["                    mob.Target = new SR_NewRuneTarget(RuneAcc);"], "all_classes": null, "length": 907}
{"pred": "            for (X509Certificate cert : chain) {\n                s.print(\"Certificate: \");\n                s.println(cert.toString());\n            }\n        }\n    }\n}\n/*\n * CertificateVerify ... CLIENT\n * Client verifies the server'", "answers": ["            for (int i = 0; i < chain.length; i++)"], "all_classes": null, "length": 1820}
{"pred": "            try {\n                sp = new JESpace (name, path);\n                spaceRegistrar.put (name, sp);\n            } catch (SpaceError e) {\n                throw e;\n            }\n        }\n        return sp;\n    }\n    }\n}\n", "answers": ["            sp = new JESpace(name, path);"], "all_classes": null, "length": 1096}
{"pred": "\t\t\t\tpos = btnEnergizeAll.bottom();\n\t\t\t}\n\t\t}\n\t}\n\t}\n}\n}\n", "answers": ["\t\t\t\t\tpos = btnEnergizeAll.bottom();"], "all_classes": null, "length": 567}
{"pred": "        path = environ.get('PATH_INFO').lstrip('/')\n        query = environ.get('QUERY_STRING')\n        if path != \"\" and path not in self.dispatcher.methods.keys():\n            start_response('404 Not Found', [Content-Type',", "answers": ["        length = int(environ['CONTENT_LENGTH'])"], "all_classes": null, "length": 1670}
{"pred": "        mark = \"setFavorite('%s')\" % status_id\n        self.webview.execute_javascript(mark)\n    def unmark_status_as_reated(self, status_id):\n        mark = \"unsetFavorite('%s');\"", "answers": ["        mark = \"setRepeated('%s');\" % status_id"], "all_classes": null, "length": 686}
{"pred": "            return {\"error\": False}\n        except Exception as e:\n            result = {\n                \"error\": True,\n                \"message\": str(e),\n                \"traceback\": traceback.format_exc()\n            }\n            return result\n    def action_copy_from", "answers": ["            return {\"error\": False}"], "all_classes": null, "length": 958}
{"pred": "\t\t\tAssert.True (Same (a, b), \"Trusted+null\");\n\t\tAssert.False (Object.ReferenceEquals (a, b), \"Reference1\");\n\t\tAssert.True (Object.ReferenceEquals (a, b), \"Reference2\");\n\tAssert.", "answers": ["\t\t\tIPermission result = a.Union (b);"], "all_classes": null, "length": 778}
{"pred": "        for trust_manager in self.trust_managers:\n            issuer = trustManager.getIssuers()\n            if issuer:\n                yield issuer\n        else:\n                pass\n        yield None\n    def getIssuers(self, auth_type", "answers": ["        certs = []"], "all_classes": null, "length": 713}
{"pred": "        DomainInfo dinfo = manager.getDomainInfo(domain);\n        request.setAttribute(\"domainInfo\", dinfo);\n    }\n}\n}\n", "answers": ["        User user = getUser(request);"], "all_classes": null, "length": 847}
{"pred": "            self.__datastream_transport = asyncio.Stream(loop=self.__event_loop)\n            self.__datastream_fd = self.__datastream_transport.get_pipe_transport(0)\n            self.__datastream_protocol = self.__datastream", "answers": ["            self.__tmp_dir, 'datastream.%s.pipe' % uuid.uuid4().hex)"], "all_classes": null, "length": 1276}
{"pred": "\t\t\tif (option1) {\n\t\t\t\tjumpID = store.GetValue (iter, column1);\n\t\t\toption1 = store.GetValue (iter, column2);\n\t\t\tif (option1) {\n\t\t\t\t// change weight\n", "answers": ["\t\t\t\tif(! option1) {"], "all_classes": null, "length": 957}
{"pred": "        String[] argValues = new String[args.length];\n        for (int i = 0; i < args.length; i++) {\n            if (args[i] == null) {\n                continue;\n            }\n            if (args[i].isResource()) {\n", "answers": ["        if ((args == null) || (args.length == 0)) {"], "all_classes": null, "length": 1570}
{"pred": "\t\t\tfirms = loadFromFile();\n\t}\n\t}, TIM(new ConfigFile<UUID, TimedData>()\n\t{\n\t@Override\n\tpublic TimedData create(UUID id, Configuration conf)\n\t{\n\treturn TimedData(id,", "answers": ["\t\t\t\tfirms = loadFromFile();"], "all_classes": null, "length": 515}
{"pred": "\t\tPreferencePage generalPage = new FieldEditorPage() {\n\t\t@Override\n\t\tprotected FieldEditors() {\n\t\taddField(new IntegerFieldEditor(SHELL_HEIGHT,\n\t\t\t\t\"Shell height (in pixels)\", getFieldParent());\n\t", "answers": ["\t\tPreferencePage generalPage = new FieldEditorPreferencePage() {"], "all_classes": null, "length": 925}
{"pred": "                if (m_Owner.CanSee(from))\n                m_Owner.SendMessage(027);\n                else\n                m_Owner.SendAsciiMessage(\"Target not in sight\");\n            }\n        }\n        }\n    }\n}\n}\n", "answers": ["                if (m_Owner.SpellTarget == null)"], "all_classes": null, "length": 538}
{"pred": "        for state in states:\n            state.expire(state.dict, self.identity_map._modified)\n        if self.session._enable_transaction_accounting:\n            self._restore_snapshot()\n        self.session._deleted = self._deleted\n", "answers": ["        for state, dict_ in states.items():"], "all_classes": null, "length": 4268}
{"pred": "\tfor (IField field : fields) {\n\t\tfinal name = field.getName();\n\tList<IField> named = name2Field.get(name);\n\tif (named==null) {\n\t\tnamed = new ArrayList<IField>(3);\n\t\tfield2", "answers": ["\t\tfor(IField field : fields) { "], "all_classes": null, "length": 1985}
{"pred": "    @functools.wraps(method)\n    def wrapper(self, *args, **kwargs):\n        if self.request.path.endswith\"\":\n        if self.request.method in (\"GET\", \"HEAD\"):\n            uri = self.request.path +", "answers": ["    like ``r'/foo/?'`` in conjunction with using the decorator."], "all_classes": null, "length": 6502}
{"pred": "\t\t\twriter.WriteStartElement (\"div\");\n\t\twriter.WriteAttribute (\"id\", NextViewCommandName);\n\twriter.WriteAttribute (\"class\", NextViewCommandName);\n\twriter.WriteAttribute (\"class\", NextViewCommandName);\n\twriter.WriteAttribute (\"class\", Pre", "answers": ["\t\t\tif ((Controls.Count == 0) && (initialIndex != -1)) "], "all_classes": null, "length": 777}
{"pred": "    wigle_downloader = WigleDownloader(args.user, args.password, args.coordfile)\n    wigle_downloader.run()\n    wigle_downloader.download()\n    wigle_downloader.download()\n    w", "answers": ["    args = parser.parse_args()"], "all_classes": null, "length": 1225}
{"pred": "                if (mod >= 16 && mod <= 20)\n                {\n                    if (i.SkillBonuses.GetBonus1 > 0)\n                    {\n                        foreach (SkillName sk in Imbuing.PossibleSkills)\n", "answers": ["                if (mod >= 156 && mod <= 160)"], "all_classes": null, "length": 1845}
{"pred": "        builds = mobile_builds(builds)\n        android_link = settings.GOGOL_PLAY_FIREFOX_LINK\n        variations = {\n            'api-9': 'Gingerbread',\n            'api-1': 'Honeycomb+ M", "answers": ["        for plat_os in ['Windows', 'Linux', 'Linux 64', 'OS X']:"], "all_classes": null, "length": 816}
{"pred": "\tif (stateBeans==null || stateBeans.isEmpty()) {\n\t\treturn false;\n\t}\n\tif (stateBeans.get(0).getObjectID()==objectID) {\n\t\treturn true;\n\t}\n\treturn false;\n\t}\n", "answers": ["\t\tif (projectID==null || issueTypeID==null) {"], "all_classes": null, "length": 1101}
{"pred": "\n            foreach (ArgumentSyntax argument in arguments) {\n                var argument = argument.ReplaceNodes( Syntax.With( Syntax.Identifier( \"this\", Syntax.Identifier(\"Autoit\") );\n                toReplace.Add(argument, argument );\n            }\n            finalScript = finalScript.ReplaceNodes", "answers": ["            foreach (ArgumentSyntax argumentSyntax in argumentSyntaxs) {"], "all_classes": null, "length": 861}
{"pred": "        split_test = self._update_partition_id(0)\n        # Verify that the user_partition_id is set to 0\n        self.assertEqual(0, split_test.user_partition_id)\n        self.assertEqual(2, len(split_", "answers": ["        split_test = self._update_partition_id(0)"], "all_classes": null, "length": 2752}
{"pred": "            if (subset != null) {\n                tmp.Add(subset);\n            }\n            if (toUnicode != null) {\n                tmp.Add(toUnicode);\n            }\n            if (cff) {\n                tmp.Add(cff);\n            }\n", "answers": ["            foreach (object o in longTag.Values) {"], "all_classes": null, "length": 1490}
{"pred": "\t\t\t\t\t\tif (cell.getNumUsagesIn() == 0)\n\t\t\t\t{\n\t\t\t\t\t\tGraphNode cgn = graphNodes.get(cell);\n\t\t\t\t\tcgn.depth = 0;\n\t\t\t\t", "answers": ["\t\t\t\t\t\tGraphNode cgn = graphNodes.get(cell);"], "all_classes": null, "length": 1113}
{"pred": "        task = new ListenableFuture(callable);\n      }\n      }\n    }\n  }\n}\n}\n}\n\\end{\n\\end{code}\n\n\n\nThe code is not complete, but it is a good start.\n\n\n\nComment: I'", "answers": ["        task = new ListenableFutureTask<>(callable);"], "all_classes": null, "length": 629}
{"pred": "                if (ke.getKeyCode() == KeyEvent.K_DOWN) {\n                    final String down = cmdHistory.goDown();\n                    if (!msg.getText().equals(down)) {\n                    msg.setText(down);\n                    }\n                }\n           ", "answers": ["                else if (ke.getKeyCode() == KeyEvent.VK_DOWN) {"], "all_classes": null, "length": 1035}
{"pred": "    prerequisite = NavigateSibling('EditTags')\n    def step(self):\n        self.prerequisite_view.policy.item_select('Manage Policies')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    prerequisite = NavigateToSibling('Details')"], "all_classes": null, "length": 534}
{"pred": "\t\tfor (IRecognitionListener listener : recognitionListeners) {\n\t\tlistener.onSequence(timestamp, sequenceTitles);\n\t}\n\t}\n\tpublic void notifyPoseListeners(BigInteger timestamp, LabanSequence sequence) {\n\tfor (IRecogn", "answers": ["\t\tfor (IJRecognitionListener listener : recognitionListeners) {"], "all_classes": null, "length": 482}
{"pred": "                if (Enabled)\n                ImageUrl = EnabledImageURL;\n                ImageUrl = DisabledImageURL;\n                base.Render(writer);\n            else\n                base.Render(writer);\n            }\n        }\n        }\n    }\n}\n}\n}\n}", "answers": ["                ScriptManager sm = ScriptManager.GetCurrent(Page);"], "all_classes": null, "length": 655}
{"pred": "\tif (compound.hasKey(\"ToolDamage\"))\n\t{\n\tdamage = compound.getInteger(\"ToolDamage\");\n\t}\n\tif (compound.hasKey(\"Enchantments\"))\n\t{\n\tint enchantmentLevel = compound.", "answers": ["\t\tdamageCooldown = compound.getInteger(\"DamageCooldown\");"], "all_classes": null, "length": 475}
{"pred": "        return \"Effect(\"probability: \" + probability + \" scopes: \" + scopes);\n    }\n}\n\n\n\n", "answers": ["        StringBuilder sb = new StringBuilder(32);"], "all_classes": null, "length": 661}
{"pred": "    i = store.handle_indicators_create(t, {\n        'indicator': 'example.com',\n        'group': 'staff',\n        'provider': 'example.com',\n        'tags': ['test'],\n        'ity': 'fdn',\n", "answers": ["    i = store.handle_indicators_create(t, {"], "all_classes": null, "length": 577}
{"pred": "        p = Person.objects[0].select_related()\n        o = Organization.objects.first()\n        self.assertEqual(p.owns[0], o)\n        self.Equal(o.owner, p)\n        doc = doc.reload(10)\n", "answers": ["        p = Person.objects.get(name=\"owner\")"], "all_classes": null, "length": 701}
{"pred": "        if sel_dim:\n            widget_dim.observe(on_widget_dim_change, names='value')\n            widget_x.observe(on_widget_x_change, names='value')\n        else:\n            display(widget_dim)\n            widget_", "answers": ["                    interact(self._plot_line, x_name=widget_x, y_name=widget_y)"], "all_classes": null, "length": 1433}
{"pred": "                if (rootFolder.IsDirectory)\n                {\n                    toScan.Add(path);\n                }\n                else\n                if (rootFolder.IsFile)\n                {\n                    toScan.Add(path);\n            }\n            }\n            foreach (var path in", "answers": ["                if (!ShouldIgnoreChange(path, ignored))"], "all_classes": null, "length": 513}
{"pred": "\t\treturn computed(key, computed);\n\t}\n\t@Override\n\tpublic boolean computeIfAbsent(K key, BiFunction<? super K, ? extends E> mapping) {\n\tFunction<K, I> function = k -> write(k, mapping.apply(k));\n", "answers": ["\t\treturn read(key, computed);"], "all_classes": null, "length": 837}
{"pred": "        cat = getToolByName(self.context, 'uid_catalog')\n        resbrains = cat.searchResults(query)\n        if len(resbrains) == 1:\n            contobj = resbrains[0].getObject()\n            if contobj.", "answers": ["        cat = getToolByName(self.context, 'uid_catalog')"], "all_classes": null, "length": 1519}
{"pred": "\t\t\tpublic byte m_X;\n\tpublic byte m_Y;\n\tpublic sbyte m_Z;\n\tpublic short_Hue;\n\tpublic int m_Hue;\n\t}\n\t}\n}\n}\n}\n}\n", "answers": ["\t\t\tset { m_ID = (ushort)value; }"], "all_classes": null, "length": 1528}
{"pred": "                // get the parcel\n                // channel_uri\n                if (land.Flags & ParcelFlags.AllowVoiceChat == 0)\n                {\n                    channelUri = String.Format(\"sip:{0}@{1}\", land.LocalID, m_free", "answers": ["                    channelUri = ChannelUri(scene, land);"], "all_classes": null, "length": 1661}
{"pred": "\t\t\t\tDialogResult=DialogResult.Cancel;\n\t\t\t}\n\t\telse {\n\t\t\tPayPeriod.StartDate=textStart.Value;\n\t\tPayPeriod.StopDate=textStop.Value;\n\tPayPeriod.Paycheck=textPaycheck.Value", "answers": ["\t\t\t\tMsgBox.Show(this,\"Please fix data entry errors first.\");"], "all_classes": null, "length": 576}
