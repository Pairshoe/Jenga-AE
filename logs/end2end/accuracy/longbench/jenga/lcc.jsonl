{"pred": "\t\t\tParticipant p = Participant(m_Participants[i];\n\t\t\tif ( p.Eliminated )\n\t\t\t{\n\t\t\t\tp.CloseGump( types[0];\n\t\t\t\tdefs[0] =", "answers": ["\t\t\t\tParticipant p = (Participant)m_Participants[i];"], "all_classes": null, "length": 5243}
{"pred": "\t\t\tif w == float('inf'):\n\t\t\treturn solutions\n\t\te_u, e_v, e_key, data\n\t\tY = Y.copy()\n\tY_.add_edge(e_u, e_v, **data.copy())\n\t", "answers": ["\t\t\tZ_.add_edge(e_u, e_v, **data.copy())"], "all_classes": null, "length": 1069}
{"pred": "        a = Sndfile(ofilename, 'r')\n        nframes = a.nframes\n        buffsize = 102\n        buffsize = min(nframes, buffsize)\n        # First, read some frames, go back, and compare buffers\n        buff", "answers": ["        rfd, fd, cfilename   = open_tmp_file('rwseektest.wav')"], "all_classes": null, "length": 844}
{"pred": "            if e.text == language:\n                return True\n            else:\n                return False\n    def activity_text(self):\n        return self.get_text_by_css(self._ACTIVITY_LIST)\n    def activity_list(self):\n        return self.", "answers": ["            if e.text == language:"], "all_classes": null, "length": 462}
{"pred": "\t\t\t\tStyle value = OLStyle value;\n\t\t\twriter.addAttribute(\"name\", value.getName());\n\t\t\twriter.add(\"default\", value.getDefault());\n\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\t", "answers": ["\t\t\t\t\tOLStyleValue styleValue = (OLStyleValue) value;"], "all_classes": null, "length": 570}
{"pred": "\n\n#!/usr/bin/env python\n#end\n", "answers": ["        longest = max(self.answers)"], "all_classes": null, "length": 1229}
{"pred": "                    mob.Prompt = new SR_NewRunePrompt(RuneAcc, mob.Location, mob.Map);\n                    Send(mob, SR_Utilities.FetchInfo(mob.Account));\n                    break;\n                case 3:\n                    mob", "answers": ["                    mob.Target = new SR_NewRuneTarget(RuneAcc);"], "all_classes": null, "length": 907}
{"pred": "            for (X509Certificate cert : chain) {\n                s.println(\"Certificate: \" + encoded\");\n                s.println(cert.toString());\n            }\n        }\n    }\n}\n/*\n * CertificateVerify ... CLIENT --> SERVER\n *", "answers": ["            for (int i = 0; i < chain.length; i++)"], "all_classes": null, "length": 1820}
{"pred": "            try {\n                sp = new JESpace (name, path);\n                spaceRegistrar.put (name, sp);\n            } catch (SpaceError e) {\n                throw e;\n            }\n        }\n        return sp;\n    }\n}\n}", "answers": ["            sp = new JESpace(name, path);"], "all_classes": null, "length": 1096}
{"pred": "\t\t\t\tpos = btnEnergizeAll.bottom();\n\t\t\t}\n\t\t}\n\t}\n\t}\n}\n}", "answers": ["\t\t\t\t\tpos = btnEnergizeAll.bottom();"], "all_classes": null, "length": 567}
{"pred": "        request = self.rfile.read(int(self.headers.getheader('content-length'))\n        response = self.dispatcher.dispatch(request)\n        self.wfile.write(response)\n\n", "answers": ["        length = int(environ['CONTENT_LENGTH'])"], "all_classes": null, "length": 1670}
{"pred": "        mark = \"setRepeated('%s')\" % status_id\n        self.webview.execute_javascript(mark)\n    def unmark_status_as_reated(self, status_id):\n        mark = \"unsetRepeated('%s');\"", "answers": ["        mark = \"setRepeated('%s');\" % status_id"], "all_classes": null, "length": 686}
{"pred": "            return {\"error\": False}\n        except Exception as e:\n            result = {\n                \"error\": True,\n                \"message\": str(e),\n                \"traceback\": traceback.format_exc()\n            }\n            return result\n    def action_copy_from", "answers": ["            return {\"error\": False}"], "all_classes": null, "length": 958}
{"pred": "\t\t\tAssert.True (Same (a, b), \"Trusted+null\");\n\t\tAssert.False (Object.ReferenceEquals (a, b), \"Reference1\");\n\t\tb = (ZoneIdentity) a.Union (null);\n\t\tAssert.True (Same", "answers": ["\t\t\tIPermission result = a.Union (b);"], "all_classes": null, "length": 778}
{"pred": "        for trust_manager in self.trust_managers:\n            issuer = trustManager.getIssuers()\n            if issuer:\n                yield issuer\n        else:\n            pass\n        return None\n\n\n    def getTrustManagers(self):\n", "answers": ["        certs = []"], "all_classes": null, "length": 713}
{"pred": "        DomainInfo dinfo = manager.getDomainInfo(domain);\n        request.setAttribute(\"domainInfo\", dinfo);\n    }\n}\n", "answers": ["        User user = getUser(request);"], "all_classes": null, "length": 847}
{"pred": "            self.__datastream_transport = asyncio.Subprocess(self.__encoder.get_transport)\n            self.__datastream_fd = self.__encoder.get_pipe_transport(0)\n            self.__datastream_protocol = down_cast(DataProtocol", "answers": ["            self.__tmp_dir, 'datastream.%s.pipe' % uuid.uuid4().hex)"], "all_classes": null, "length": 1276}
{"pred": "\t\t\tif (option1) {\n\t\t\t\tjumpID = store.GetValue (iter, column1);\n\t\t\toption1 = store.GetValue (iter, column2);\n\t\t\tif (option1) {\n\t\t\t\t//change weight\n", "answers": ["\t\t\t\tif(! option1) {"], "all_classes": null, "length": 957}
{"pred": "        String[] argValues = new String[args.length];\n        for (int i = 0; i < args.length; i++) {\n            if (args[i] == null) {\n                continue;\n            }\n            if (args[i].isResource()) {\n", "answers": ["        if ((args == null) || (args.length == 0)) {"], "all_classes": null, "length": 1570}
{"pred": "\t\t\tfirms = loadFromFile();\n\t}\n\t}, TIM(new ConfigFile<UUID, TimedData>()\n\t{\n\t@Override\n\tpublic TimedData create(UUID id, Configuration conf)\n\t{\n\treturn TimedData(id,", "answers": ["\t\t\t\tfirms = loadFromFile();"], "all_classes": null, "length": 515}
{"pred": "\tgeneralPage = new FieldEditorPage() {\n\t@Override\n\tprotected FieldEditors() {\n\taddField(new IntegerFieldEditor(SHELL_HEIGHT,\n\t\t\t\"Shell height (in pixels)\", getFieldParent());\n\taddField(new IntegerFieldEditor(", "answers": ["\t\tPreferencePage generalPage = new FieldEditorPreferencePage() {"], "all_classes": null, "length": 925}
{"pred": "                if (m_Owner.CanSee(from))\n                m_Owner.SendAsciiMessage(027);\n                else\n                m_Owner.SendAsciiMessage(\"Target not in line of sight\");\n            }\n        }\n        }\n    }\n}\n}", "answers": ["                if (m_Owner.SpellTarget == null)"], "all_classes": null, "length": 538}
{"pred": "        for state in states:\n            state.expire(state.dict, self.identity_map._modified)\n        self._deleted = self._deleted\n        self._key_switches = self._key_switches\n        self._new = weakref.WeakDictionary", "answers": ["        for state, dict_ in states.items():"], "all_classes": null, "length": 4268}
{"pred": "\tfor (IField f : fields) {\n\t\tfinal name = f.getName();\n\tList<IField> named = name2Field.get(name);\n\tif (named==null) {\n\t\tnamed = new ArrayList<IField>(3);\n\t\tfield2", "answers": ["\t\tfor(IField field : fields) { "], "all_classes": null, "length": 1985}
{"pred": "    @functools.wraps(method)\n    def wrapper(self, *args, **kwargs):\n        if not self.request.path.endswith(\"/\"):\n            if self.request.method in (\"GET\", \"HEAD\"):\n                uri = self.request.", "answers": ["    like ``r'/foo/?'`` in conjunction with using the decorator."], "all_classes": null, "length": 6502}
{"pred": "\t\t\tif (View != null)\n\t\t\tView.Render (writer);\n\t\telse\n\t\t\tbase.Render (writer);\n\t}\n\t}\n\t}\n}\n}\n", "answers": ["\t\t\tif ((Controls.Count == 0) && (initialIndex != -1)) "], "all_classes": null, "length": 777}
{"pred": "    wigle_downloader = WigleDownloader(parser.parse_args())\n    wigle_downloader.run()\n    wigle_downloader.download()\n    \"\"\"\n", "answers": ["    args = parser.parse_args()"], "all_classes": null, "length": 1225}
{"pred": "                if (mod >= 16 && mod <= 16)\n                {\n                    if (i.SkillBonuses.GetBonus1 > 0)\n                    {\n                        foreach (SkillName sk in Imbuing.PossibleSkills)\n", "answers": ["                if (mod >= 156 && mod <= 160)"], "all_classes": null, "length": 1845}
{"pred": "        builds = firefox_details.firefox_primary_builds\n        firefox_beta_builds\n        version = firefox_details.latest_version(channel)\n        for builds in builds:\n            if locale in builds and version in builds[locale]:\n            _builds = builds[", "answers": ["        for plat_os in ['Windows', 'Linux', 'Linux 64', 'OS X']:"], "all_classes": null, "length": 816}
{"pred": "\tif (stateBeans==null || stateBeans.isEmpty()) {\n\t\treturn false;\n\t}\n\tif (stateBeans!=null && stateBeans.isEmpty()) {\n\t\treturn false;\n\t}\n\tBean stateBean = stateBeans.get(0", "answers": ["\t\tif (projectID==null || issueTypeID==null) {"], "all_classes": null, "length": 1101}
{"pred": "            foreach (ArgumentSyntax argument in arguments) {\n                toReplace.Add(argument.Parent, Syntax.Argument(Syntax.Identifier(SyntaxKind.Identifier, argument.Parent.Name.Value));\n            }\n            foreach (MemberDeclarationSyntax member in memberList) {\n                var argument =", "answers": ["            foreach (ArgumentSyntax argumentSyntax in argumentSyntaxs) {"], "all_classes": null, "length": 861}
{"pred": "        split_test = self.get_item_from_modulestore(self.split_test_usage_key, verify_is_draft=True)\n        self.assertEqual(0, split_test.user_partition_id)\n        self.assertEqual(1,", "answers": ["        split_test = self._update_partition_id(0)"], "all_classes": null, "length": 2752}
{"pred": "            if (subset != null) {\n                tmp.Add(subset);\n            }\n            if (toUnicode != null) {\n                tmp.Add(toUnicode);\n            }\n            if (cff) {\n                tmp.Add(fontDescriptor);\n            }\n", "answers": ["            foreach (object o in longTag.Values) {"], "all_classes": null, "length": 1490}
{"pred": "\t\t\t\t\t\tif (cell.getNumUsagesIn() == 0)\n\t\t\t\t{\n\t\t\t\t\t\tGraphNode cgn = graphNodes.get(cell);\n\t\t\t\t\tcgn.depth = 0;\n\t\t\t\t", "answers": ["\t\t\t\t\t\tGraphNode cgn = graphNodes.get(cell);"], "all_classes": null, "length": 1113}
{"pred": "        task = new ListenableFuture(callable);\n      }\n      }\n    }\n  }\n}\n}\n", "answers": ["        task = new ListenableFutureTask<>(callable);"], "all_classes": null, "length": 629}
{"pred": "                if (ke.getKey() == KeyEvent.K_DOWN) {\n                    final String down = cmdHistory.goDown();\n                    if (!msgTF.getText().equals(down)) {\n                        msgTF.setText(down);\n                    }\n                }\n", "answers": ["                else if (ke.getKeyCode() == KeyEvent.VK_DOWN) {"], "all_classes": null, "length": 1035}
{"pred": "\n\n    prerequisite = NavigateSibling('EditTags')\n    def step(self):\n        self.prerequisite_view.policy.item_select('Manage Policies')\nclass NodeManagePolicies(CFMENavigateStep):", "answers": ["    prerequisite = NavigateToSibling('Details')"], "all_classes": null, "length": 534}
{"pred": "\tfor (IRecognitionListener listener : recognitionListeners) {\n\tlistener.onSequence(timestamp, sequenceTitles);\n\t}\n}\n}\n", "answers": ["\t\tfor (IJRecognitionListener listener : recognitionListeners) {"], "all_classes": null, "length": 482}
{"pred": "                if (Enabled)\n                ImageUrl = EnabledImageURL;\n                ImageUrl = DisabledImageURL;\n            base.Render(writer);\n            else\n                Visible = NoPermissionMode!=NoVisibilityInvisible;\n            }\n        }\n        }\n    }\n}", "answers": ["                ScriptManager sm = ScriptManager.GetCurrent(Page);"], "all_classes": null, "length": 655}
{"pred": "\tif (compound.hasKey(\"ToolDamage\"))\n\t{\n\tdamage = compound.getInteger(\"ToolDamage\");\n\t}\n\tif (compound.hasKey(\"ToolDamage\"))\n\t{\n\tdamage = compound.getInteger", "answers": ["\t\tdamageCooldown = compound.getInteger(\"DamageCooldown\");"], "all_classes": null, "length": 475}
{"pred": "        return \"Effect(\"probability=\" + \" \" + probability + \"scopes=\" + scopes);\n    }\n}\n", "answers": ["        StringBuilder sb = new StringBuilder(32);"], "all_classes": null, "length": 661}
{"pred": "    i = store.handle_indicators_create(t, {\n        'indicator': 'example.com',\n        'group': 'staff',\n        'provider': 'example.com',\n        'tags': ['test'],\n        'ity': 'fdn',\n", "answers": ["    i = store.handle_indicators_create(t, {"], "all_classes": null, "length": 577}
{"pred": "        p = Person.objects[0].select_related()\n        o = Organization.objects.first()\n        self.Equal(p.owns[0], o)\n        self.Equal(o.owner, p)\n        doc = doc.reload(10)\n       ", "answers": ["        p = Person.objects.get(name=\"owner\")"], "all_classes": null, "length": 701}
{"pred": "        if sel_dim:\n            widget_dim.observe(on_widget_dim_change, names='value')\n            widget_x.observe(on_widget_x_change, names='value')\n        else:\n            display(widget_dim)\n            widget_", "answers": ["                    interact(self._plot_line, x_name=widget_x, y_name=widget_y)"], "all_classes": null, "length": 1433}
{"pred": "                if (rootFolder.IsDirectory)\n                {\n                    toScan.Add(path);\n                }\n                else\n                if (path.IsNullOrWhiteSpace())\n                {\n                    throw new ArgumentNullException(\"path\");\n                }\n                if (rootFolder.", "answers": ["                if (!ShouldIgnoreChange(path, ignored))"], "all_classes": null, "length": 513}
{"pred": "\treturn computed(key, computed);\n}\n\t@Override\n\tpublic E computeIfPresent(K key, BiFunction<? super K, ? extends E> remappingFunction) {\n\tFunction<K, I> function = k -> write(k, mapping.apply(k));\n", "answers": ["\t\treturn read(key, computed);"], "all_classes": null, "length": 837}
{"pred": "        cat = getToolByName(self.context, 'uid_catalog')\n        resbrains = cat.searchResults(query)\n        if len(resbrains) == 1:\n            contobj = resbrains[0].getObject()\n            if contobj.", "answers": ["        cat = getToolByName(self.context, 'uid_catalog')"], "all_classes": null, "length": 1519}
{"pred": "\t\t\tpublic byte m_X;\n\tpublic byte m_Y;\n\tpublic sbyte m_Z;\n\tpublic short_Hue;\n\tpublic int m_Hue;\n\t}\n}\n}\n}\n", "answers": ["\t\t\tset { m_ID = (ushort)value; }"], "all_classes": null, "length": 1528}
{"pred": "                // get channel_uri:\n                // check whether parcel allows voice\n                // if so, get the channel\n                // send it to the client\n                // channel_uri = String.Format(\"sip:regionID@m_sip_Domain\", land.LocalID);\n               ", "answers": ["                    channelUri = ChannelUri(scene, land);"], "all_classes": null, "length": 1661}
{"pred": "\t\t\t\tDialogResult=DialogResult.Cancel;\n\t\t\t}\n\t\telse {\n\t\t\tPayPeriod.StartDate=textStart.Value;\n\t\t\tPayPeriod.StopDate=textStop.Value;\n\t\t\tPayPeriod.Paycheck=textPay", "answers": ["\t\t\t\tMsgBox.Show(this,\"Please fix data entry errors first.\");"], "all_classes": null, "length": 576}
